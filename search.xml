<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Multiselect Checkbox</title>
      <link href="/2020/08/31/Multiselect-Checkbox/"/>
      <url>/2020/08/31/Multiselect-Checkbox/</url>
      
        <content type="html"><![CDATA[<h1 id="Multiselect-Checkbox"><a href="#Multiselect-Checkbox" class="headerlink" title="Multiselect Checkbox"></a>Multiselect Checkbox</h1><p>Hôm nay mình tiếp tục xậy dựng component multiselect checkbox dùng react hook :D</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> MultiselectCheckbox = <span class="function">(<span class="params">&#123; options, onChange &#125;</span>) =&gt;</span> &#123;</span><br><span class="line"><span class="comment">// data là biến lưu trữ list checkbox, default được gán bằng props options</span></span><br><span class="line">  <span class="keyword">const</span> [data, setData] = React.useState(options);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Hàm toggle sẽ cập nhật biến checked</span></span><br><span class="line">  <span class="keyword">const</span> toggle = <span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">    data.forEach(<span class="function">(<span class="params">_, key</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (data[key].label === item.label) data[key].checked = !item.checked;</span><br><span class="line">    &#125;);</span><br><span class="line">    setData([...data]);</span><br><span class="line">    onChange(data);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;data.map(<span class="function">(<span class="params">item</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">          &lt;li key=&#123;item.label&#125; onClick=&#123;() =&gt; toggle(item)&#125;&gt;</span><br><span class="line">            &lt;input readOnly type=<span class="string">"checkbox"</span> checked=&#123;item.checked || <span class="literal">false</span>&#125; /&gt;</span><br><span class="line">            &#123;item.label&#125;</span><br><span class="line">          &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        );</span></span><br><span class="line"><span class="regexp">      &#125;)&#125;</span></span><br><span class="line"><span class="regexp">    &lt;/u</span>l&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>Cách dùng:</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// option là 1 array</span></span><br><span class="line"><span class="comment">// onChange là 1 function với tham số là 1 mảng.</span></span><br><span class="line">&lt;MultiselectCheckbox</span><br><span class="line">  options=&#123;[&#123; <span class="attr">label</span>: <span class="string">"Item One"</span> &#125;, &#123; <span class="attr">label</span>: <span class="string">"Item Two"</span> &#125;]&#125;</span><br><span class="line">  onChange=&#123;(data) =&gt; &#123;</span><br><span class="line">   <span class="built_in">console</span>.log(data);</span><br><span class="line">  &#125;&#125;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><ul><li>Demo:</li></ul><p><a href="https://codesandbox.io/s/js-multiselectcheckbox-rq896" target="_blank" rel="noopener">Link demo js</a></p><p><a href="https://codesandbox.io/s/ts-multiselectcheckbox-oonu5" target="_blank" rel="noopener">Link demo ts</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> reactjs </tag>
            
            <tag> js </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React TagInput</title>
      <link href="/2020/08/28/React-TagInput/"/>
      <url>/2020/08/28/React-TagInput/</url>
      
        <content type="html"><![CDATA[<h1 id="React-component-Tag-input"><a href="#React-component-Tag-input" class="headerlink" title="React component Tag input"></a>React component Tag input</h1><p><img src="/images/pasted-1.png" alt="upload successful"></p><p>Tiếp tục mình sẽ làm component Tag dùng react hook</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tag-input</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">48px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#d6d8da</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-input</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">46px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-input</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: transparent;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#tags</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">0</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">32px</span>;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">list-style</span>: none;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">6px</span>;</span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">8px</span> <span class="number">8px</span> <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0052cc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-title</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">3px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.tag-close-icon</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">16px</span>;</span><br><span class="line">  <span class="attribute">text-align</span>: center;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">margin-left</span>: <span class="number">8px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#0052cc</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Component</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TagInput = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [tags, setTags] = useState(props.tags); <span class="comment">// tags là state chưa các tag deafault được lấy từ props</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// hàm này xử lý khi xóa 1 tag</span></span><br><span class="line">  <span class="keyword">const</span> removeTags = <span class="function">(<span class="params">indexToRemove</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> newtags = [...tags.filter(<span class="function">(<span class="params">_, index</span>) =&gt;</span> index !== indexToRemove)];</span><br><span class="line">    setTags(newtags);</span><br><span class="line">    <span class="keyword">if</span> (!props.onClick) <span class="keyword">return</span>;</span><br><span class="line">    props.onClick(newtags);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hàm này xử lý khi thêm 1 tag</span></span><br><span class="line">  <span class="keyword">const</span> addTags = <span class="function">(<span class="params">event</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (event.target.value !== <span class="string">""</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> newTags = [...tags, event.target.value];</span><br><span class="line">      setTags(newTags);</span><br><span class="line">      event.target.value = <span class="string">""</span>;</span><br><span class="line">      <span class="keyword">if</span> (!props.onClick) <span class="keyword">return</span>;</span><br><span class="line">      props.onClick(newTags);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div className=<span class="string">"tag-input"</span>&gt;</span><br><span class="line">      &lt;ul id=<span class="string">"tags"</span>&gt;</span><br><span class="line">        &#123;tags.map(<span class="function">(<span class="params">tag, index</span>) =&gt;</span> (</span><br><span class="line">          &lt;li key=&#123;index&#125; className=<span class="string">"tag"</span>&gt;</span><br><span class="line">            &lt;span className=<span class="string">"tag-title"</span>&gt;&#123;tag&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">            &lt;span className="tag-close-icon" onClick=&#123;() =&gt; removeTags(index)&#125;&gt;</span></span><br><span class="line"><span class="regexp">              x</span></span><br><span class="line"><span class="regexp">            &lt;/</span>span&gt;</span><br><span class="line">          &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">        ))&#125;</span></span><br><span class="line"><span class="regexp">      &lt;/u</span>l&gt;</span><br><span class="line">      &lt;input</span><br><span class="line">        type=<span class="string">"text"</span></span><br><span class="line">        onKeyUp=&#123;(event) =&gt; (event.key === <span class="string">"Enter"</span> ? addTags(event) : <span class="literal">null</span>)&#125;</span><br><span class="line">        placeholder=<span class="string">"Press enter to add tags"</span></span><br><span class="line">      /&gt;</span><br><span class="line">    &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  );</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br></pre></td></tr></table></figure><ul><li>Cách sử dụng:</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Gồm 2 props là tags và onClick</span></span><br><span class="line"><span class="comment">// Tags là mảng chứa các tag default</span></span><br><span class="line"><span class="comment">// onClick là một function trả về mảng các tag khi thêm</span></span><br><span class="line">&lt;TagInput tags=&#123;[<span class="string">"Nodejs"</span>, <span class="string">"MongoDB"</span>]&#125; onClick=&#123;(tags) =&gt; <span class="built_in">console</span>.log(tags)&#125; /&gt;</span><br></pre></td></tr></table></figure><p><a href="https://codesandbox.io/s/js-tag-input-w9ip1" target="_blank" rel="noopener">Link demo</a></p><p><a href="https://codesandbox.io/s/ts-tag-input-xj7lc" target="_blank" rel="noopener">Link demo dùng TS</a></p>]]></content>
      
      
      <categories>
          
          <category> Reactjs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> reactjs </tag>
            
            <tag> js </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>React SearchBar</title>
      <link href="/2020/08/27/React-SearchBar/"/>
      <url>/2020/08/27/React-SearchBar/</url>
      
        <content type="html"><![CDATA[<h1 id="React-Component-Search-Bar"><a href="#React-Component-Search-Bar" class="headerlink" title="React Component Search Bar"></a>React Component Search Bar</h1><p><img src="/images/pasted-0.png" alt="upload successful"></p><p>Hôm nay mình sẽ làm một component search bar như hình trên, sử dụng react hook (React hook là một tính năng mới được thêm vào từ bản react 16.8 mục đích là để sử dụng được state và lifecycle trong function component)</p><h2 id="Duoi-day-la-phan-code"><a href="#Duoi-day-la-phan-code" class="headerlink" title="Dưới đây là phần code"></a>Dưới đây là phần code</h2><ul><li>CSS</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">form</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">  <span class="attribute">align-items</span>: center;</span><br><span class="line">  <span class="attribute">justify-content</span>: center;</span><br><span class="line">  <span class="attribute">box-shadow</span>: <span class="number">0</span> <span class="number">4px</span> <span class="number">8px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.2</span>);</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#37474f</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">2rem</span>;</span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">10rem</span>;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">300ms</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.645</span>, <span class="number">0.045</span>, <span class="number">0.355</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">  <span class="attribute">transition</span>: all <span class="number">300ms</span> <span class="built_in">cubic-bezier</span>(<span class="number">0.645</span>, <span class="number">0.045</span>, <span class="number">0.355</span>, <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">::placeholder</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">button</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: transparent;</span><br><span class="line">  <span class="attribute">border</span>: none;</span><br><span class="line">  <span class="attribute">outline</span>: none;</span><br><span class="line">  <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Component</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> SearchBar = <span class="function">(<span class="params">props</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> [input, setInput] = useState(<span class="string">""</span>); <span class="comment">// state input để lưu value của thẻ input</span></span><br><span class="line">  <span class="keyword">const</span> [barOpened, setBarOpened] = useState(<span class="literal">false</span>); <span class="comment">// barOpened để check khi click</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> formRef = useRef(); <span class="comment">// formRef để tham chiếu đến element form</span></span><br><span class="line">  <span class="keyword">const</span> inputFocus = useRef(); <span class="comment">// inputFocus để tham chiếu đến element input</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// useEffect không truyền đối số nào thì hoạt động như componentDidMount trong class component</span></span><br><span class="line"><span class="comment">// thêm sự kiện mousedown cho document khi mounted và remove sự kiện khi component unmount</span></span><br><span class="line">  useEffect(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"mousedown"</span>, handleClick);</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="built_in">document</span>.removeEventListener(<span class="string">"mousedown"</span>, handleClick);</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;, []);</span><br><span class="line"></span><br><span class="line"><span class="comment">// hàm này xử lý khi click ra ngoài form</span></span><br><span class="line">  <span class="keyword">const</span> handleClick = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (formRef.current.contains(e.target)) &#123;</span><br><span class="line">      <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    setBarOpened(<span class="literal">false</span>);</span><br><span class="line">    setInput(<span class="string">""</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// hàm này xử lý khi form submit</span></span><br><span class="line">  <span class="keyword">const</span> onFormSubmit = <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    <span class="keyword">if</span> (!input) <span class="keyword">return</span>;</span><br><span class="line">    setInput(<span class="string">""</span>);</span><br><span class="line">    setBarOpened(<span class="literal">false</span>);</span><br><span class="line">    props.onClick(input);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;form</span><br><span class="line">        onClick=&#123;() =&gt; &#123;</span><br><span class="line">          setBarOpened(<span class="literal">true</span>);</span><br><span class="line">          inputFocus.current.focus();</span><br><span class="line">        &#125;&#125;</span><br><span class="line">        onSubmit=&#123;onFormSubmit&#125;</span><br><span class="line">        ref=&#123;formRef&#125;</span><br><span class="line">        style=&#123;&#123;</span><br><span class="line">          width: barOpened ? <span class="string">"30rem"</span> : <span class="string">"2rem"</span>,</span><br><span class="line">          cursor: barOpened ? <span class="string">"auto"</span> : <span class="string">"pointer"</span></span><br><span class="line">        &#125;&#125;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;button</span><br><span class="line">          type=<span class="string">"submit"</span></span><br><span class="line">          style=&#123;&#123;</span><br><span class="line">            pointerEvents: barOpened ? <span class="string">"auto"</span> : <span class="string">"none"</span>,</span><br><span class="line">            cursor: barOpened ? <span class="string">"pointer"</span> : <span class="string">"none"</span></span><br><span class="line">          &#125;&#125;</span><br><span class="line">        &gt;</span><br><span class="line">          icon</span><br><span class="line">        &lt;<span class="regexp">/button&gt;</span></span><br><span class="line"><span class="regexp">        &lt;input</span></span><br><span class="line"><span class="regexp">          onChange=&#123;(e) =&gt; setInput(e.target.value)&#125;</span></span><br><span class="line"><span class="regexp">          ref=&#123;inputFocus&#125;</span></span><br><span class="line"><span class="regexp">          value=&#123;input&#125;</span></span><br><span class="line"><span class="regexp">          placeholder="Search..."</span></span><br><span class="line"><span class="regexp">          style=&#123;&#123;</span></span><br><span class="line"><span class="regexp">            marginLeft: barOpened ? "1rem" : "0rem"</span></span><br><span class="line"><span class="regexp">          &#125;&#125;</span></span><br><span class="line"><span class="regexp">        /</span>&gt;</span><br><span class="line">      &lt;<span class="regexp">/form&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ul><li>Cách sử dụng:</li></ul><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// props là 1 function để lấy data khi form submit</span></span><br><span class="line">&lt;SearchBar onClick=&#123;(data) =&gt; <span class="built_in">console</span>.log(data)&#125; /&gt;</span><br></pre></td></tr></table></figure><p><a href="https://codesandbox.io/s/js-search-bar-r7id5" target="_blank" rel="noopener">Link demo</a></p><p><a href="https://codesandbox.io/s/ts-search-bar-zt349" target="_blank" rel="noopener">Link demo dùng TS</a></p>]]></content>
      
      
      <categories>
          
          <category> Reactjs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> css </tag>
            
            <tag> reactjs </tag>
            
            <tag> js </tag>
            
            <tag> ts </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Debounce và Throttle</title>
      <link href="/2020/08/04/Debounce-va-Throttle/"/>
      <url>/2020/08/04/Debounce-va-Throttle/</url>
      
        <content type="html"><![CDATA[<p><strong>Debounce và Throttle là hai kĩ thuật cơ bản hay được sử dụng để tối ưu sự kiện DOM và trong một số trường hợp nhất định</strong></p><h1 id="1-Debounce"><a href="#1-Debounce" class="headerlink" title="1. Debounce"></a>1. Debounce</h1><ul><li><p>Chỉ quan tâm tới việc thực thi 1 hàm nào đó sau khoảng thời gian bao lâu.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> debounce = <span class="function">(<span class="params">func, wait</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> timeout;</span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">const</span> context = <span class="keyword">this</span>, args = <span class="built_in">arguments</span>;</span><br><span class="line">      <span class="keyword">const</span> executeFunction = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        func.apply(context, args);</span><br><span class="line">      &#125;;</span><br><span class="line">      clearTimeout(timeout);</span><br><span class="line">      timeout = setTimeout(executeFunction, wait);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li></ul><h1 id="2-Throttle"><a href="#2-Throttle" class="headerlink" title="2. Throttle"></a>2. Throttle</h1><ul><li><p>Quan tâm tới việc thực thi 1 hàm bao nhiêu lần trong bao lâu.</p></li><li><p>Ví dụ: 1 hàm thực thi 1000 lần trong 10s nhưng với <em>throttle</em> trong 100ms thì hàm chỉ thực hiện tối đa được 100 lần:</p><p><code>10s * 1000 = 10000ms10000ms/100ms = 100 (lần)</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> throttle = <span class="function">(<span class="params">func, limit</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">let</span> lastFunc</span><br><span class="line">  <span class="keyword">let</span> lastRan</span><br><span class="line">  <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> context = <span class="keyword">this</span></span><br><span class="line">    <span class="keyword">const</span> args = <span class="built_in">arguments</span></span><br><span class="line">    <span class="keyword">if</span> (!lastRan) &#123;</span><br><span class="line">      func.apply(context, args)</span><br><span class="line">      lastRan = <span class="built_in">Date</span>.now()</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      clearTimeout(lastFunc)</span><br><span class="line">      lastFunc = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="built_in">Date</span>.now() - lastRan) &gt;= limit) &#123;</span><br><span class="line">          func.apply(context, args)</span><br><span class="line">          lastRan = <span class="built_in">Date</span>.now()</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;, limit - (<span class="built_in">Date</span>.now() - lastRan))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">lastRan: biến check để đảm bảo thực hiện hàm lần cuối cùng</span><br></pre></td></tr></table></figure></li></ul><iframe height="430" style="width: 100%;" scrolling="no" title="Debounce and throttle" src="https://codepen.io/hungbka/embed/VwawZNw?height=430&theme-id=dark&default-tab=js,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/VwawZNw' target="_blank" rel="noopener">Debounce and throttle</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe>]]></content>
      
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>css layout :D</title>
      <link href="/2020/08/02/css-layout/"/>
      <url>/2020/08/02/css-layout/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Can-giua-1-phan-tu"><a href="#1-Can-giua-1-phan-tu" class="headerlink" title="1. Căn giữa 1 phần tử"></a>1. Căn giữa 1 phần tử</h2><ul><li><code>place-items: center</code></li></ul><iframe height="265" style="width: 100%;" scrolling="no" title="supercenter" src="https://codepen.io/hungbka/embed/preview/dyGxByG?height=265&theme-id=dark&default-tab=css,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/dyGxByG' target="_blank" rel="noopener">supercenter</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><h2 id="2-Chia-layout-phan-tu-con"><a href="#2-Chia-layout-phan-tu-con" class="headerlink" title="2. Chia layout phần tử con"></a>2. Chia layout phần tử con</h2><ul><li><code>flex: 0 1 &lt;baseWidth&gt;</code></li></ul><iframe height="265" style="width: 100%;" scrolling="no" title="VweoJpP" src="https://codepen.io/hungbka/embed/VweoJpP?height=265&theme-id=dark&default-tab=css,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/VweoJpP' target="_blank" rel="noopener">VweoJpP</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><ul><li><code>grid-template-columns: repeat(auto-fit, minmax(&lt;base&gt;, 1fr))</code></li></ul><iframe height="265" style="width: 100%;" scrolling="no" title="layout child" src="https://codepen.io/hungbka/embed/mdVNZqB?height=265&theme-id=dark&default-tab=css,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/mdVNZqB' target="_blank" rel="noopener">layout child</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><h2 id="3-Set-layout-sidebar"><a href="#3-Set-layout-sidebar" class="headerlink" title="3. Set layout sidebar"></a>3. Set layout sidebar</h2><ul><li><code>grid-template-columns: minmax(&lt;min&gt;, &lt;max&gt;) ...</code></li></ul><iframe height="265" style="width: 100%;" scrolling="no" title="layout sidebar" src="https://codepen.io/hungbka/embed/PoZMrjE?height=265&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/PoZMrjE' target="_blank" rel="noopener">layout sidebar</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><h2 id="4-Chia-layout-co-ban"><a href="#4-Chia-layout-co-ban" class="headerlink" title="4. Chia layout cơ bản"></a>4. Chia layout cơ bản</h2><ul><li><code>grid-template-rows: auto 1fr auto</code></li></ul><iframe height="471" style="width: 100%;" scrolling="no" title="layout basic" src="https://codepen.io/hungbka/embed/KKVOjvJ?height=471&theme-id=dark&default-tab=result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/KKVOjvJ' target="_blank" rel="noopener">layout basic</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><ul><li><code>grid-template: auto 1fr auto / auto 1fr auto</code></li></ul><iframe height="454" style="width: 100%;" scrolling="no" title="layout basic 2" src="https://codepen.io/hungbka/embed/mdVNZBB?height=454&theme-id=dark&default-tab=css,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/mdVNZBB' target="_blank" rel="noopener">layout basic 2</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe><h2 id="5-Clamp-phan-tu"><a href="#5-Clamp-phan-tu" class="headerlink" title="5. Clamp phần tử"></a>5. Clamp phần tử</h2><ul><li><code>clamp(&lt;min&gt;, &lt;actual&gt;, &lt;max&gt;)</code></li></ul><iframe height="472" style="width: 100%;" scrolling="no" title="clamp" src="https://codepen.io/hungbka/embed/oNbKrEB?height=472&theme-id=dark&default-tab=html,result" frameborder="no" loading="lazy" allowtransparency="true" allowfullscreen="true">  See the Pen <a href='https://codepen.io/hungbka/pen/oNbKrEB' target="_blank" rel="noopener">clamp</a> by hungbka  (<a href='https://codepen.io/hungbka' target="_blank" rel="noopener">@hungbka</a>) on <a href='https://codepen.io' target="_blank" rel="noopener">CodePen</a>.</iframe>]]></content>
      
      
      
        <tags>
            
            <tag> css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lời muốn nói!</title>
      <link href="/2020/06/02/loi-gioi-thieu/"/>
      <url>/2020/06/02/loi-gioi-thieu/</url>
      
        <content type="html"><![CDATA[<p>Xin chào, mình là Hùng. Sau khi học đến năm 3 ngành Điện tử - Viễn thông tại trường Đại học Bách khoa Hà Nội thì mình tự cảm thấy bản thân kém cỏi và chán ngành học này vì 2 lý do. Thứ nhất là không có tiền mua đồ nghề và thứ hai là ngành này quá nhiều lý thuyết về vật lý. Thấy bản thân thật vô dụng nên đã tìm kiếm đâu đó trên mạng nghề nào đó chỉ cần có 1 chiếc máy tính là đủ và mình đã tìm thấy đó là ngành lập trình phần mềm. Mọi thứ mình biết được đến bây giờ cũng là do tự học và tìm hiểu.</p><p>Với kiến thức mà mình đã biết trong lúc học và đi làm, tuy còn hạn chế nhưng mình sẽ chia sẻ cho mọi người… Bên cạnh đó mình cũng biết sơ sơ về lập trình phần cứng (1 phần nhỏ thuộc ngành IOT) mà mình đã biết được khi học ở trường mình cũng sẽ chia sẻ cho mọi người.</p><p>Blog này mình build bằng <code>hexo</code> do một đứa em trong công ty chỉ cho. Ai quan tâm thì ghé qua blog của nó nhé <a href="https://dungnt11.github.io/" target="_blank" rel="noopener">Dungnt11</a></p><p>Cảm ơn mọi người đã ghé qua blog của mình. &lt;3</p>]]></content>
      
      
      
        <tags>
            
            <tag> Giới thiệu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
